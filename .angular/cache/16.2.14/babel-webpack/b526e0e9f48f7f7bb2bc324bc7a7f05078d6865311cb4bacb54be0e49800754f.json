{"ast":null,"code":"import { __decorate } from \"tslib\";\nexport let SettingsEditComponent = class SettingsEditComponent {\n  ngOnInit() {\n    const fileInput = document.getElementById('fileInput');\n    const profilePic = document.getElementById('profilePic');\n    profilePic.addEventListener('click', () => {\n      fileInput.click();\n    });\n    fileInput.addEventListener('change', event => {\n      const input = event.target;\n      if (input.files && input.files[0]) {\n        const reader = new FileReader();\n        reader.onload = e => {\n          profilePic.src = e.target.result;\n        };\n        reader.readAsDataURL(input.files[0]);\n      }\n    });\n  }\n};\nSettingsEditComponent = __decorate([Component({\n  selector: 'app-settings-edit',\n  templateUrl: './settings-edit.component.html',\n  styleUrls: ['./settings-edit.component.css']\n})], SettingsEditComponent);","map":{"version":3,"names":["SettingsEditComponent","ngOnInit","fileInput","document","getElementById","profilePic","addEventListener","click","event","input","target","files","reader","FileReader","onload","e","src","result","readAsDataURL","__decorate","Component","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Memo\\meter\\src\\app\\core\\components\\settings\\settings-edit\\settings-edit.component.ts"],"sourcesContent":["import { ComponentÙˆOnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-edit',\n  templateUrl: './settings-edit.component.html',\n  styleUrls: ['./settings-edit.component.css']\n})\nexport class SettingsEditComponent implements OnInit {\n  ngOnInit() {\n    const fileInput = document.getElementById('fileInput') as HTMLInputElement;\n    const profilePic = document.getElementById('profilePic') as HTMLImageElement;\n\n    profilePic.addEventListener('click', () => {\n      fileInput.click();\n    });\n\n    fileInput.addEventListener('change', (event: Event) => {\n      const input = event.target as HTMLInputElement;\n      if (input.files && input.files[0]) {\n        const reader = new FileReader();\n        reader.onload = (e: ProgressEvent<FileReader>) => {\n          profilePic.src = e.target!.result as string;\n        };\n        reader.readAsDataURL(input.files[0]);\n      }\n    });\n  }\n}\n"],"mappings":";AAOO,WAAMA,qBAAqB,GAA3B,MAAMA,qBAAqB;EAChCC,QAAQA,CAAA;IACN,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAqB;IAC1E,MAAMC,UAAU,GAAGF,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAqB;IAE5EC,UAAU,CAACC,gBAAgB,CAAC,OAAO,EAAE,MAAK;MACxCJ,SAAS,CAACK,KAAK,EAAE;IACnB,CAAC,CAAC;IAEFL,SAAS,CAACI,gBAAgB,CAAC,QAAQ,EAAGE,KAAY,IAAI;MACpD,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAA0B;MAC9C,IAAID,KAAK,CAACE,KAAK,IAAIF,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC,EAAE;QACjC,MAAMC,MAAM,GAAG,IAAIC,UAAU,EAAE;QAC/BD,MAAM,CAACE,MAAM,GAAIC,CAA4B,IAAI;UAC/CV,UAAU,CAACW,GAAG,GAAGD,CAAC,CAACL,MAAO,CAACO,MAAgB;QAC7C,CAAC;QACDL,MAAM,CAACM,aAAa,CAACT,KAAK,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC;;IAExC,CAAC,CAAC;EACJ;CACD;AApBYX,qBAAqB,GAAAmB,UAAA,EALjCC,SAAS,CAAC;EACTC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWvB,qBAAqB,CAoBjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}