{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let NotificationsSendModalComponent = class NotificationsSendModalComponent {\n  constructor() {\n    this.dropdownOpen = false;\n    this.selectedRecipients = [];\n    this.recipients = [{\n      name: 'All Users',\n      selected: false\n    }, {\n      name: 'Providers',\n      selected: false\n    }, {\n      name: 'Customers',\n      selected: false\n    }, {\n      name: 'Sellers',\n      selected: false\n    }];\n  }\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n  }\n  updateSelectedRecipients() {\n    this.selectedRecipients = this.recipients.filter(recipient => recipient.selected).map(recipient => recipient.name);\n  }\n  onDocumentClick(event) {\n    if (!event.target.closest('.input-container')) {\n      this.dropdownOpen = false;\n    }\n  }\n};\n__decorate([HostListener('document:click', ['$event'])], NotificationsSendModalComponent.prototype, \"onDocumentClick\", null);\nNotificationsSendModalComponent = __decorate([Component({\n  selector: 'app-notifications-send-modal',\n  templateUrl: './notifications-send-modal.component.html',\n  styleUrls: ['./notifications-send-modal.component.css']\n})], NotificationsSendModalComponent);","map":{"version":3,"names":["Component","HostListener","NotificationsSendModalComponent","constructor","dropdownOpen","selectedRecipients","recipients","name","selected","toggleDropdown","updateSelectedRecipients","filter","recipient","map","onDocumentClick","event","target","closest","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Memo\\meter\\src\\app\\core\\components\\notifications\\notifications-send-modal\\notifications-send-modal.component.ts"],"sourcesContent":["import { Component,HostListener  } from '@angular/core';\n\n@Component({\n  selector: 'app-notifications-send-modal',\n  templateUrl: './notifications-send-modal.component.html',\n  styleUrls: ['./notifications-send-modal.component.css']\n})\nexport class NotificationsSendModalComponent {\n  dropdownOpen = false;\n  selectedRecipients: string[] = [];\n  recipients = [\n    { name: 'All Users', selected: false },\n    { name: 'Providers', selected: false },\n    { name: 'Customers', selected: false },\n    { name: 'Sellers', selected: false }\n  ];\n\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n  }\n\n  updateSelectedRecipients() {\n    this.selectedRecipients = this.recipients\n      .filter(recipient => recipient.selected)\n      .map(recipient => recipient.name);\n  }\n\n  @HostListener('document:click', ['$event'])\n  onDocumentClick(event: Event) {\n    if (!(<Element>event.target).closest('.input-container')) {\n      this.dropdownOpen = false;\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAACC,YAAY,QAAS,eAAe;AAOhD,WAAMC,+BAA+B,GAArC,MAAMA,+BAA+B;EAArCC,YAAA;IACL,KAAAC,YAAY,GAAG,KAAK;IACpB,KAAAC,kBAAkB,GAAa,EAAE;IACjC,KAAAC,UAAU,GAAG,CACX;MAAEC,IAAI,EAAE,WAAW;MAAEC,QAAQ,EAAE;IAAK,CAAE,EACtC;MAAED,IAAI,EAAE,WAAW;MAAEC,QAAQ,EAAE;IAAK,CAAE,EACtC;MAAED,IAAI,EAAE,WAAW;MAAEC,QAAQ,EAAE;IAAK,CAAE,EACtC;MAAED,IAAI,EAAE,SAAS;MAAEC,QAAQ,EAAE;IAAK,CAAE,CACrC;EAkBH;EAhBEC,cAAcA,CAAA;IACZ,IAAI,CAACL,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAM,wBAAwBA,CAAA;IACtB,IAAI,CAACL,kBAAkB,GAAG,IAAI,CAACC,UAAU,CACtCK,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACJ,QAAQ,CAAC,CACvCK,GAAG,CAACD,SAAS,IAAIA,SAAS,CAACL,IAAI,CAAC;EACrC;EAGAO,eAAeA,CAACC,KAAY;IAC1B,IAAI,CAAWA,KAAK,CAACC,MAAO,CAACC,OAAO,CAAC,kBAAkB,CAAC,EAAE;MACxD,IAAI,CAACb,YAAY,GAAG,KAAK;;EAE7B;CACD;AALCc,UAAA,EADCjB,YAAY,CAAC,gBAAgB,EAAE,CAAC,QAAQ,CAAC,CAAC,C,qEAK1C;AAzBUC,+BAA+B,GAAAgB,UAAA,EAL3ClB,SAAS,CAAC;EACTmB,QAAQ,EAAE,8BAA8B;EACxCC,WAAW,EAAE,2CAA2C;EACxDC,SAAS,EAAE,CAAC,0CAA0C;CACvD,CAAC,C,EACWnB,+BAA+B,CA0B3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}