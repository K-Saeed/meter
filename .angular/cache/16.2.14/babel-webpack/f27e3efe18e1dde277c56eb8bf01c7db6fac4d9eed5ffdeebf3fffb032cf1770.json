{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let UserProviderModalComponent = class UserProviderModalComponent {\n  constructor() {\n    this.dropdownOpen = 'none';\n    this.phoneNumber = '+966';\n    this.showPassword = false;\n    this.showConfirmPassword = false;\n    this.Role = [{\n      name: 'Customer',\n      selected: false\n    }, {\n      name: 'Provider',\n      selected: false\n    }, {\n      name: 'Merchant',\n      selected: false\n    }];\n    this.Providers = [{\n      name: 'Company',\n      selected: false\n    }, {\n      name: 'Establishment',\n      selected: false\n    }, {\n      name: 'Office',\n      selected: false\n    }];\n    this.Activity = [{\n      name: 'Survey Office',\n      selected: false\n    }, {\n      name: 'Engineering Office',\n      selected: false\n    }, {\n      name: 'Design Office',\n      selected: false\n    }, {\n      name: 'Interior Design Office',\n      selected: false\n    }, {\n      name: 'Engineering consulting company',\n      selected: false\n    }, {\n      name: 'Salama Office',\n      selected: false\n    }, {\n      name: 'Other',\n      selected: false\n    }];\n    this.filteredProviders = [...this.Providers];\n    this.selectedRole = '';\n    this.selectedProvider = '';\n    this.selectedActivity = '';\n  }\n  toggleDropdown(type) {\n    if (this.dropdownOpen === type) {\n      this.dropdownOpen = 'none';\n    } else {\n      this.dropdownOpen = type;\n    }\n  }\n  updateSelectedRole() {\n    this.selectedRole = this.selectedRole;\n    this.dropdownOpen = 'none';\n  }\n  updateSelectedProvider() {\n    this.selectedProvider = this.selectedProvider;\n    this.dropdownOpen = 'none';\n  }\n  updateSelectedActivity() {\n    this.selectedActivity = this.selectedActivity;\n    this.dropdownOpen = 'none';\n  }\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  toggleConfirmPasswordVisibility() {\n    this.showConfirmPassword = !this.showConfirmPassword;\n  }\n  onPhoneInput(event) {\n    const input = event.target;\n    if (!input.value.startsWith('+966')) {\n      input.value = '+966';\n    }\n    if (input.value.length > 13) {\n      input.value = input.value.slice(0, 13);\n    }\n    this.phoneNumber = input.value;\n  }\n};\nUserProviderModalComponent = __decorate([Component({\n  selector: 'app-user-provider-modal',\n  templateUrl: './user-provider-modal.component.html',\n  styleUrls: ['./user-provider-modal.component.css']\n})], UserProviderModalComponent);","map":{"version":3,"names":["Component","UserProviderModalComponent","constructor","dropdownOpen","phoneNumber","showPassword","showConfirmPassword","Role","name","selected","Providers","Activity","filteredProviders","selectedRole","selectedProvider","selectedActivity","toggleDropdown","type","updateSelectedRole","updateSelectedProvider","updateSelectedActivity","togglePasswordVisibility","toggleConfirmPasswordVisibility","onPhoneInput","event","input","target","value","startsWith","length","slice","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Memo\\meter\\src\\app\\core\\components\\users\\user-add-modal\\user-provider\\user-provider-modal\\user-provider-modal.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-user-provider-modal',\n  templateUrl: './user-provider-modal.component.html',\n  styleUrls: ['./user-provider-modal.component.css']\n})\nexport class UserProviderModalComponent {\n  dropdownOpen: 'none' | 'provider' | 'role' | 'activity' = 'none';\n  phoneNumber: string = '+966';\n  showPassword = false;\n  showConfirmPassword = false;\n\n  Role = [\n    { name: 'Customer', selected: false },\n    { name: 'Provider', selected: false },\n    { name: 'Merchant', selected: false },\n  ];\n\n  Providers = [\n    { name: 'Company', selected: false },\n    { name: 'Establishment', selected: false },\n    { name: 'Office', selected: false },\n  ];\n\n  Activity = [\n    { name: 'Survey Office', selected: false },\n    { name: 'Engineering Office', selected: false },\n    { name: 'Design Office', selected: false },\n    { name: 'Interior Design Office', selected: false },\n    { name: 'Engineering consulting company', selected: false },\n    { name: 'Salama Office', selected: false },\n    { name: 'Other', selected: false },\n  ];\n\n  filteredProviders = [...this.Providers];\n\n  selectedRole: string = '';\n  selectedProvider: string = '';\n  selectedActivity: string = '';\n\n\n  toggleDropdown(type: 'provider' | 'role' | 'activity') {\n    if (this.dropdownOpen === type) {\n      this.dropdownOpen = 'none'; \n    } else {\n      this.dropdownOpen = type; \n    }\n  }\n\n  updateSelectedRole() {\n    this.selectedRole = this.selectedRole;\n    this.dropdownOpen = 'none';\n  }\n\n  updateSelectedProvider() {\n    this.selectedProvider = this.selectedProvider;\n    this.dropdownOpen = 'none';\n  }\n\n  updateSelectedActivity() {\n    this.selectedActivity = this.selectedActivity;\n    this.dropdownOpen = 'none';\n  }\n\n\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n\n  toggleConfirmPasswordVisibility() {\n    this.showConfirmPassword = !this.showConfirmPassword;\n  }\n\n  onPhoneInput(event: Event) {\n    const input = event.target as HTMLInputElement;\n    if (!input.value.startsWith('+966')) {\n      input.value = '+966';\n    }\n    if (input.value.length > 13) {\n      input.value = input.value.slice(0, 13);\n    }\n    this.phoneNumber = input.value;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}